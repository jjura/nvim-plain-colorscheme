-- init.lua

local color = {
    -- color
    blue    = "#5ca1e6",
    cyan    = "#5ce6b8",
    green   = "#a1e65c",
    magenta = "#a15ce6",
    orange  = "#e68a5c",
    red     = "#e65c5c",
    yellow  = "#e6b85c",

    -- gray
    gray_0 = "#1a1a1a",
    gray_1 = "#333333",
    gray_2 = "#4d4d4d",
    gray_3 = "#666666",
    gray_4 = "#999999",

    -- primary
    black = "#000000",
    white = "#cccccc",
    none  = "NONE",
}

local colorscheme = {}

colorscheme.diagnostic         = {
    DiagnosticError            = { bg = color.none, fg = color.red },
    DiagnosticHint             = { bg = color.none, fg = color.yellow },
    DiagnosticInfo             = { bg = color.none, fg = color.blue },
    DiagnosticOk               = { bg = color.none, fg = color.green },
    DiagnosticWarn             = { bg = color.none, fg = color.orange },
    DiagnosticFloatingError    = { link = "DiagnosticError" },
    DiagnosticFloatingHint     = { link = "DiagnosticHint" },
    DiagnosticFloatingInfo     = { link = "DiagnosticInfo" },
    DiagnosticFloatingOk       = { link = "DiagnosticOk" },
    DiagnosticFloatingWarn     = { link = "DiagnosticWarn" },
    DiagnosticSignError        = { bg = color.gray_0, fg = color.red },
    DiagnosticSignHint         = { bg = color.gray_0, fg = color.yellow },
    DiagnosticSignInfo         = { bg = color.gray_0, fg = color.blue },
    DiagnosticSignOk           = { bg = color.gray_0, fg = color.green },
    DiagnosticSignWarn         = { bg = color.gray_0, fg = color.orange },
    DiagnosticUnderlineError   = { underline = true },
    DiagnosticUnderlineHint    = { underline = true },
    DiagnosticUnderlineInfo    = { underline = true },
    DiagnosticUnderlineOk      = { underline = true },
    DiagnosticUnderlineWarn    = { underline = true },
    DiagnosticVirtualTextError = { link = "DiagnosticError" },
    DiagnosticVirtualTextHint  = { link = "DiagnosticHint" },
    DiagnosticVirtualTextInfo  = { link = "DiagnosticInfo" },
    DiagnosticVirtualTextOk    = { link = "DiagnosticOk" },
    DiagnosticVirtualTextWarn  = { link = "DiagnosticWarn" },
    DiagnosticDeprecated       = { bg = color.none, fg = color.white },
    DiagnosticUnnecessary      = { bg = color.none, fg = color.white },
}

colorscheme.interface    = {
    Added                = { bg = color.none, fg = color.white },
    Changed              = { bg = color.none, fg = color.white },
    ColorColumn          = { bg = color.gray_0, fg = color.none },
    Conceal              = { bg = color.none, fg = color.white },
    CurSearch            = { bg = color.orange, fg = color.black },
    Cursor               = { bg = color.none, fg = color.white },
    CursorColumn         = { bg = color.none, fg = color.white },
    CursorIM             = { bg = color.none, fg = color.white },
    CursorLine           = { bg = color.gray_1, fg = color.none },
    CursorLineFold       = { link = "FoldColumn" },
    CursorLineNr         = { bg = color.none, fg = color.white },
    CursorLineSign       = { link = "SignColumn" },
    DiffAdd              = { bg = color.none, fg = color.green },
    DiffChange           = { bg = color.none, fg = color.green },
    DiffDelete           = { bg = color.none, fg = color.red },
    DiffText             = { bg = color.none, fg = color.red },
    Directory            = { bg = color.none, fg = color.green },
    EndOfBuffer          = { bg = color.none, fg = color.gray_1 },
    ErrorMsg             = { bg = color.none, fg = color.red },
    FloatBorder          = { bg = color.none, fg = color.gray_1 },
    FloatFooter          = { bg = color.none, fg = color.white },
    FloatShadow          = { bg = color.none, fg = color.white },
    FloatShadowThrough   = { bg = color.none, fg = color.white },
    FloatTitle           = { bg = color.none, fg = color.white },
    FoldColumn           = { bg = color.none, fg = color.gray_3 },
    Folded               = { bg = color.none, fg = color.gray_3 },
    IncSearch            = { bg = color.orange, fg = color.black },
    LineNr               = { bg = color.none, fg = color.white },
    LineNrAbove          = { bg = color.none, fg = color.gray_2 },
    LineNrBelow          = { bg = color.none, fg = color.gray_2 },
    MatchParen           = { bg = color.gray_1, fg = color.none },
    ModeMsg              = { bg = color.none, fg = color.white },
    MoreMsg              = { bg = color.none, fg = color.white },
    MsgArea              = { bg = color.none, fg = color.white },
    MsgSeparator         = { bg = color.none, fg = color.white },
    NonText              = { bg = color.none, fg = color.gray_1 },
    Normal               = { bg = color.none, fg = color.white },
    NormalFloat          = { bg = color.none, fg = color.white },
    NormalNC             = { bg = color.none, fg = color.white },
    Pmenu                = { bg = color.none, fg = color.gray_3 },
    PmenuExtra           = { bg = color.none, fg = color.gray_2 },
    PmenuExtraSel        = { bg = color.gray_0, fg = color.gray_3 },
    PmenuKind            = { bg = color.none, fg = color.blue },
    PmenuKindSel         = { bg = color.gray_0, fg = color.blue },
    PmenuMatch           = { bg = color.none, fg = color.white },
    PmenuMatchSel        = { bg = color.none, fg = color.white },
    PmenuSbar            = { bg = color.gray_0, fg = color.white },
    PmenuSel             = { bg = color.gray_0, fg = color.white },
    PmenuThumb           = { bg = color.gray_1, fg = color.white },
    Question             = { bg = color.none, fg = color.white },
    QuickFixLine         = { bg = color.none, fg = color.blue },
    RedrawDebugClear     = { bg = color.none, fg = color.white },
    RedrawDebugComposed  = { bg = color.none, fg = color.white },
    RedrawDebugNormal    = { bg = color.none, fg = color.white },
    RedrawDebugRecompose = { bg = color.none, fg = color.white },
    Removed              = { bg = color.none, fg = color.white },
    Search               = { bg = color.yellow, fg = color.black },
    SignColumn           = { bg = color.gray_0, fg = color.white },
    SpecialKey           = { bg = color.none, fg = color.gray_2 },
    SpellBad             = { bg = color.none, fg = color.white },
    SpellCap             = { bg = color.none, fg = color.white },
    SpellLocal           = { bg = color.none, fg = color.white },
    SpellRare            = { bg = color.none, fg = color.white },
    StatusLine           = { bg = color.gray_0, fg = color.gray_3 },
    StatusLineNC         = { bg = color.gray_0, fg = color.gray_2 },
    StatusLineTerm       = { bg = color.none, fg = color.white },
    StatusLineTermNC     = { bg = color.none, fg = color.white },
    Substitute           = { bg = color.yellow, fg = color.black },
    TabLine              = { bg = color.none, fg = color.white },
    TabLineFill          = { bg = color.none, fg = color.white },
    TabLineSel           = { bg = color.none, fg = color.white },
    TermCursor           = { reverse = true },
    TermCursorNC         = { bg = color.none, fg = color.none },
    Title                = { bg = color.none, fg = color.blue },
    VertSplit            = { link = "WinSeparator" },
    Visual               = { bg = color.gray_1, fg = color.none },
    VisualNOS            = { bg = color.none, fg = color.white },
    WarningMsg           = { bg = color.none, fg = color.white },
    Whitespace           = { link = "NonText" },
    WildMenu             = { bg = color.none, fg = color.white },
    WinBar               = { bg = color.none, fg = color.white },
    WinBarNC             = { bg = color.none, fg = color.white },
    WinSeparator         = { bg = color.none, fg = color.gray_1 },
    lCursor              = { bg = color.none, fg = color.white },
}

colorscheme.language            = {
    LspCodeLens                 = { bg = color.none, fg = color.white },
    LspCodeLensSeparator        = { bg = color.none, fg = color.white },
    LspInlayHint                = { bg = color.none, fg = color.white },
    LspReferenceRead            = { bg = color.none, fg = color.white },
    LspReferenceText            = { bg = color.none, fg = color.white },
    LspReferenceWrite           = { bg = color.none, fg = color.white },
    LspSignatureActiveParameter = { bg = color.gray_0, fg = color.none },
    SnippetTabstop              = { bg = color.none, fg = color.white },
    ["@lsp.mod.deprecated"]     = { link = "DiagnosticDeprecated" },
    ["@lsp.type.class"]         = { link = "@type" },
    ["@lsp.type.comment"]       = { link = "@comment" },
    ["@lsp.type.decorator"]     = { link = "@attribute" },
    ["@lsp.type.enum"]          = { link = "@type" },
    ["@lsp.type.enumMember"]    = { link = "@constant" },
    ["@lsp.type.event"]         = { link = "@type" },
    ["@lsp.type.function"]      = { link = "@function" },
    ["@lsp.type.interface"]     = { link = "@type" },
    ["@lsp.type.keyword"]       = { link = "@keyword" },
    ["@lsp.type.macro"]         = { link = "Macro" },
    ["@lsp.type.method"]        = { link = "@function" },
    ["@lsp.type.modifier"]      = { bg = color.none, fg = color.white },
    ["@lsp.type.namespace"]     = { link = "@module" },
    ["@lsp.type.number"]        = { link = "@number" },
    ["@lsp.type.operator"]      = { link = "@operator" },
    ["@lsp.type.parameter"]     = { link = "@variable" },
    ["@lsp.type.property"]      = { link = "@property" },
    ["@lsp.type.regexp"]        = { link = "@string.regexp" },
    ["@lsp.type.string"]        = { link = "@string" },
    ["@lsp.type.struct"]        = { link = "@type" },
    ["@lsp.type.type"]          = { link = "@type" },
    ["@lsp.type.typeParameter"] = { link = "@variable" },
    ["@lsp.type.variable"]      = { link = "@variable" },
}

colorscheme.netrw = {
    netrwClassify = { bg = color.none, fg = color.blue },
    netrwDir      = { bg = color.none, fg = color.blue },
    netrwExe      = { bg = color.none, fg = color.green },
    netrwPlain    = { bg = color.none, fg = color.white },
    netrwTreeBar  = { bg = color.none, fg = color.gray_1 },
}

colorscheme.plainline       = {
    PlainLineActive         = { bg = color.gray_0, fg = color.gray_3 },
    PlainLineInactive       = { bg = color.gray_0, fg = color.gray_2 },
    PlainLineBranchActive   = { bg = color.gray_1, fg = color.white },
    PlainLineBranchInactive = { bg = color.gray_1, fg = color.gray_3 },
    PlainLineModeCommand    = { bg = color.red, fg = color.black },
    PlainLineModeInactive   = { bg = color.gray_2, fg = color.black },
    PlainLineModeInsert     = { bg = color.green, fg = color.black },
    PlainLineModeNormal     = { bg = color.blue, fg = color.black },
    PlainLineModeVisual     = { bg = color.orange, fg = color.black },
}

colorscheme.syntax = {
    Boolean        = { bg = color.none, fg = color.magenta },
    Character      = { bg = color.none, fg = color.yellow },
    Comment        = { bg = color.none, fg = color.gray_2 },
    Conditional    = { bg = color.none, fg = color.red },
    Constant       = { bg = color.none, fg = color.magenta },
    Debug          = { bg = color.none, fg = color.white },
    Define         = { bg = color.none, fg = color.white },
    Delimiter      = { bg = color.none, fg = color.white },
    Error          = { bg = color.none, fg = color.white },
    Exception      = { bg = color.none, fg = color.white },
    Float          = { bg = color.none, fg = color.cyan },
    Function       = { bg = color.none, fg = color.green },
    Identifier     = { bg = color.none, fg = color.white },
    Ignore         = { bg = color.none, fg = color.white },
    Include        = { bg = color.none, fg = color.orange },
    Keyword        = { bg = color.none, fg = color.red },
    Label          = { bg = color.none, fg = color.red },
    Macro          = { bg = color.none, fg = color.orange },
    Number         = { bg = color.none, fg = color.cyan },
    Operator       = { bg = color.none, fg = color.red },
    PreCondit      = { bg = color.none, fg = color.orange },
    PreProc        = { bg = color.none, fg = color.orange },
    Property       = { bg = color.none, fg = color.gray_4 },
    Repeat         = { bg = color.none, fg = color.red },
    Special        = { bg = color.none, fg = color.white },
    SpecialChar    = { bg = color.none, fg = color.orange },
    SpecialComment = { bg = color.none, fg = color.white },
    Statement      = { bg = color.none, fg = color.red },
    StorageClass   = { bg = color.none, fg = color.red },
    String         = { bg = color.none, fg = color.yellow },
    Structure      = { bg = color.none, fg = color.red },
    Tag            = { bg = color.none, fg = color.white },
    Todo           = { bg = color.none, fg = color.gray_3 },
    Type           = { bg = color.none, fg = color.blue },
    Typedef        = { bg = color.none, fg = color.white },
    Underlined     = { bg = color.none, fg = color.white },
}

colorscheme.treesitter              = {
    ["@attribute"]                  = { link = "Macro" },
    ["@attribute.builtin"]          = { link = "Special" },
    ["@boolean"]                    = { link = "Boolean" },
    ["@character"]                  = { link = "Character" },
    ["@character.special"]          = { link = "SpecialChar" },
    ["@comment"]                    = { link = "Comment" },
    ["@comment.error"]              = { link = "DiagnosticError" },
    ["@comment.note"]               = { link = "DiagnosticInfo" },
    ["@comment.todo"]               = { link = "Todo" },
    ["@comment.warning"]            = { link = "DiagnosticWarn" },
    ["@constant"]                   = { link = "Constant" },
    ["@constant.builtin"]           = { link = "Special" },
    ["@constructor"]                = { bg = color.none, fg = color.white },
    ["@diff.delta"]                 = { link = "Changed" },
    ["@diff.minus"]                 = { link = "Removed" },
    ["@diff.plus"]                  = { link = "Added" },
    ["@function"]                   = { link = "Function" },
    ["@function.builtin"]           = { link = "Special" },
    ["@keyword"]                    = { link = "Keyword" },
    ["@label"]                      = { link = "Label" },
    ["@markup"]                     = { bg = color.none, fg = color.gray_4 },
    ["@markup.heading"]             = { bg = color.none, fg = color.blue },
    ["@markup.italic"]              = { bg = color.none, fg = color.none },
    ["@markup.link"]                = { bg = color.none, fg = color.none },
    ["@markup.strikethrough"]       = { bg = color.none, fg = color.none },
    ["@markup.strong"]              = { bg = color.none, fg = color.none },
    ["@markup.underline"]           = { bg = color.none, fg = color.none },
    ["@module"]                     = { link = "Structure" },
    ["@module.builtin"]             = { link = "Special" },
    ["@number"]                     = { link = "Number" },
    ["@number.float"]               = { link = "Float" },
    ["@operator"]                   = { link = "Operator" },
    ["@property"]                   = { link = "Property" },
    ["@punctuation"]                = { link = "Delimiter" },
    ["@punctuation.special"]        = { link = "Special" },
    ["@spell.markdown"]             = { bg = color.none, fg = color.gray_2 },
    ["@string"]                     = { link = "String" },
    ["@string.escape"]              = { link = "@string.special" },
    ["@string.regexp"]              = { link = "@string.special" },
    ["@string.special"]             = { link = "SpecialChar" },
    ["@string.special.url"]         = { link = "Underlined" },
    ["@tag"]                        = { link = "Tag" },
    ["@tag.builtin"]                = { link = "Special" },
    ["@type"]                       = { link = "Type" },
    ["@type.builtin"]               = { link = "Special" },
    ["@variable"]                   = { link = "Identifier" },
    ["@variable.builtin"]           = { link = "Special" },
    ["@variable.parameter.builtin"] = { link = "Special" },
}

local M = {}

M.colorscheme = function ()
    for _, section in pairs(colorscheme) do
        for name, settings in pairs(section) do
            vim.api.nvim_set_hl(0, name, settings)
        end
    end
end

return M
